#!/bin/bash
### write this script to change build sets without messing up PKGBUILD

### Colors and bold effect initialization
tput init
bdr="$(tput bold)$(tput setaf 1)"
bds="$(tput bold)$(tput setaf 2)"
bi="$(tput bold)$(tput setaf 4)"
bo="$(tput sgr0)"

# Eh, how should I handle that?
dontknowhowtouse=(winlist-ng)

# Prepare for clean & change the pkgname...
cleanup() {
	sed -i '/^  \./s/^/#/; s/svn-alternative/svn/' PKGBUILD
}

selection() {
	arr=("$@")
	read -r slt
	[[ -z "${slt}" ]] && return
	[[ "${slt}" =~ "0" ]] && {
		arr=${arr[@]}
		sed -i "${defline}s/$/ $arr/" PKGBUILD
		return
	}
	while [[ "${slt}" =~ " " ]]; do
    num=${slt%% *};
    sed -i "${defline}s/$/ ${arr[$((--num))]}/" PKGBUILD
    # avoid dup
    arr[${num}]=""
    slt=${slt#* }
  done
  sed -i "${defline}s/$/ ${arr[$((--slt))]}/" PKGBUILD
  return
}

### Initialization.
[[ -n $1 ]] && cd "$1"

# Get the defset
defline=$(sed -n '/^defset/=' PKGBUILD)
((defline++))
arr=$(sed -n "${defline}p" PKGBUILD)

echo \
"Do you want to use the default build set, or manually select modules following my instruction?
 The default build set is as follows:
${arr}
 Type \"n\" and hit Enter to start to manually select modules."
read -r sig
[[ ! $sig == "n" ]] && {
  echo "OK, start build..."
  cleanup
  exit 0
}

echo \
"OK, start to select modules.

${bdr}SELECTION TYPE GUIDE:${bo}
 0 : select all modules in current module set;
 other numbers (seperated using space(' ')) : select modules;
 Enter: choose nothing.
Press any key to continue..."
read -n 1

# Clean build set
sed -i "${defline}s/.*/   /" PKGBUILD

### Module sets selection.
gadget=(alarm deskshow exebuf mail news places winselector forecasts)
echo \
"${bds}1.Gadgets, better take them all?${bo}
 (1)${bi}alarm${bo}: alarm clock.
 (2)${bi}deskshow${bo}: a button to show desk.
 (3)${bi}exebuf${bo}: a useful module used to run command from it. Recommend to use with key binding.
    (bug: it only displays a full black block and doesn't show the cmd you type, but it still correctly execute cmd.)
 (4)${bi}mail${bo}: check new mails.
 (5)${bi}news${bo}: check RSS feeds.
 (6)${bi}places${bo}: volume devices manager.
 (7)${bi}winselector${bo}: a button to list all windows.
 (8)${bi}forecasts${bo}: weather forecast."
selection ${gadget[@]}

taskbarlike=(engage itask taskbar)
echo \
"${bds}2.taskbar-like module set, also useful.${bo}
(1)${bi}engage${bo}: previous itask-ng, I recommend to use it (more stable and nicer).
(2)${bi}itask${bo}: displays like taskbar, so if you hate engage (but why?), choose either of them.
(3)${bi}taskbar${bo}"
selection ${taskbarlike[@]}

musicplay=(empris mpdule)
echo \
"${bds}3.musicplay control module set, take what you want.${bo}
(1)${bi}empris${bo}: work with those player has mpris support.
(2)${bi}mpdule${bo}: work with mpd only (dependency: libmpd)."
selection ${musicplay[@]}

eyecandy=(comp-scale eenvader.fractal flame moon rain penguins photo slideshow snow)
echo \
"4.${bds}eyecandies!${bo}
(1)${bi}comp-scale${bo}:
(2)${bi}eenvader.fractal${bo}: just an interesting wallpaper... take it if you like.
(3)${bi}flame${bo}
(4)${bi}moon${bo}
(5)${bi}rain${bo}
(6)${bi}penguins${bo}
(7)${bi}photo${bo}: display pics from folders as a slideshow.
(8)${bi}slideshow${bo}: turn desktop background into slideshow.
(9)${bi}snow${bo}"
selection ${eyecandy[@]}

cmdredir=(eektool execwatch)
echo \
"${bds}5.cmdredir module set, redirect specified cmd output into a block.${bo}
(1)${bi}eektool${bo}
(2)${bi}execwatch${bo}"
selection ${cmdredir[@]}

monitor=(cpu diskio mem net)
echo \
"${bds}6.system monitor set.${bo}
(1)${bi}cpu${bo}: cpu usage.
(2)${bi}diskio${bo}
(3)${bi}mem${bo}: mem usage
(4)${bi}net${bo}: up/down speed."
selection ${monitor[@]}

everything=(everything-aspell everything-mpris everything-pidgin everything-places everything-tracker everything-wallpaper everything-websearch)
echo \
"${bds}7.everything module set (load everything-starter first to use them).${bo}
(1)${bi}everything-aspell${bo}: check the spell of the text typed inside.
(2)${bi}everything-mpris${bo}: like empris, it works with mpris-compat player.
(3)${bi}everything-pidgin${bo} 
(4)${bi}everything-places${bo}
(5)${bi}everything-tracker${bo}
(6)${bi}everything-wallpaper${bo}: set wallpaper.
(7)${bi}everything-websearch${bo}: shortcut to search web."
selection ${everything[@]}

### Add dependencies...
# (I wonder if I should add deps for everything-aspell/pidgin -
#  it can be built and loaded even without deps installed, but in this condition they're useless.)
[[ -n $(grep mpdule PKGBUILD) ]] && sed -i "/^depends/s/)/ 'libmpd')/" PKGBUILD || sed -i "/^depends/s/ 'libmpd'//" PKGBUILD

### OK we did it...
cleanup
echo \
"OK, adjust the PKGBUILD to choose modules as you want.
${bdr}Now, just restart build!${bo}"
exit 1
